Deadlock recovery is the most practical way to deal with deadlocks, it is used in personal
computers and all recovery techniques have their respective use cases. The method doesn't
require much additional resources or computational power as it doesn't try to predict the
state of the system, it just handles the deadlocks when they happen.

Deadlock avoidance is usually impossible to implement practically as most programs can't be
predicted because the system needs to know in advance which resources will be used. It could
work in some specialized hardware (like microcontrollers) where the resources used can be
predicted in advance.

Deadlock prevention is also often impossible to practically implement. The easiest viable strategy for
deadlock prevention is circular wait. Deadlock prevention should be used in case when no deadlocks
are allowed to happen under any condition, e.g. realtime systems which can't support rollback or
prediction.
